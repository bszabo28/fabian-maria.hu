add_header X-Cache $upstream_cache_status;

server {
        charset utf-8;
        listen 80;
        listen [::]:80;
        server_name dev.fabianmaria.local www.dev.fabianmaria.local;

        return 302 https://$server_name$request_uri;
}

server {
        charset utf-8;

        listen 443 ssl;
        listen [::]:443 ssl;
        include snippets/self-signed.conf;
        include snippets/ssl-params.conf;

        server_name dev.fabianmaria.local;
        root /var/www/html/web;

        location = /favicon.ico {
                log_not_found off;
                access_log off;
        }

        location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
        }

        # Very rarely should these ever be accessed outside of your lan
        location ~* \.(txt|log)$ {
                allow 192.168.0.0/16;
                deny all;
        }

        location ~ \..*/.*\.php$ {
                return 403;
        }

        location ~ ^/sites/.*/private/ {
                return 403;
        }

        # Block access to scripts in site files directory
        location ~ ^/sites/[^/]+/files/.*\.php$ {
                deny all;
        }

        # Allow "Well-Known URIs" as per RFC 5785
        location ~* ^/.well-known/ {
                allow all;
        }

        # Block access to "hidden" files and directories whose names begin with a
        # period. This includes directories used by version control systems such
        # as Subversion or Git to store control files.
        location ~ (^|/)\. {
                return 403;
        }

        location / {
                # try_files $uri @rewrite; # For Drupal <= 6
                try_files $uri /index.php?$query_string; # For Drupal >= 7
        }

        location @rewrite {
                #rewrite ^/(.*)$ /index.php?q=$1; # For Drupal <= 6
                rewrite ^ /index.php; # For Drupal >= 7
        }

        # Don't allow direct access to PHP files in the vendor directory.
        location ~ /vendor/.*\.php$ {
                deny all;
                return 404;
        }

        # Protect files and directories from prying eyes.
        location ~* \.(engine|inc|install|make|module|profile|po|sh|.*sql|theme|twig|tpl(\.php)?|xtmpl|yml)(~|\.sw[op]|\.bak|\.orig|\.save)?$|^(\.(?!well-known).*|Entries.*|Repository|Root|Tag|Template|composer\.(json|lock)|web\.config)$|^#.*#$|\.php(~|\.sw[op]|\.bak|\.orig|\.save)$ {
                deny all;
                return 404;
        }

        location ~ '\.php$|^/update.php' {
                include fastcgi_params;
                fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
                fastcgi_param HTTP_PROXY "";
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param PATH_INFO $fastcgi_path_info;
                fastcgi_param QUERY_STRING $query_string;
                fastcgi_intercept_errors on;
                fastcgi_pass php:9000;

                # fastcgi_buffers 16 16k;
                # fastcgi_buffer_size 32k;
                fastcgi_buffering off;

        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                try_files $uri @rewrite;
                expires max;
                log_not_found off;
        }

        # Fighting with Styles? This little gem is amazing.
        # location ~ ^/sites/.*/files/imagecache/ { # For Drupal <= 6
        location ~ ^/sites/.*/files/styles/ {
                try_files $uri @rewrite;
        }

        # Handle private files through Drupal. Private file's path can come
        # with a language prefix.
        location ~ ^(/[a-z\-]+)?/system/files/ {
                try_files $uri /index.php?$query_string;
        }

        # Enforce clean URLs
        # Removes index.php from urls like www.example.com/index.php/my-page --> www.example.com/my-page
        # Could be done with 301 for permanent or other redirect codes.
        if ($request_uri ~* "^(.*/)index\.php/(.*)") {
                return 307 $1$2;
        }
}